    1  exit
    2  sudo su - 
    3  ls
    4  cd /tmp/
    5  ls
    6  cd mydevops-gitrepo/
    7  ls
    8  git config --global --list 
    9  git config --global user.name "Vagrant"
   10  git config --global user.email "Vagrant@localhost"
   11  git config --global --list 
   12  ls
   13  vim HelloWorld.txt 
   14  sudo su 
   15  vim HelloWorld.txt 
   16  git status 
   17  git commit -am "File has been updated"
   18  git log 
   19  history 
   20  vi ~/.gitconfig 
   21  echo "Apple Pie"
   22  echo "Apple Pie" | git hash-object --stdin 
   23  echo "Amit" | git hash-object --stdin 
   24  echo "Amit Vashist" | git hash-object --stdin 
   25  echo "Amit" | git hash-object --stdin -w
   26  git cat-file abea3f812d5ad9682701b73eef009870dcd28aa6 -t 
   27  git cat-file abea3f812d5ad9682701b73eef009870dcd28aa6 -p 
   28  ls
   29  ls -a 
   30  cd .git/
   31  ls
   32  git cat-file abea3f812d5ad9682701b73eef009870dcd28aa6 -p 
   33  cd objects/
   34  ls
   35  ls -ltr * 
   36  ls
   37  cd ..
   38  ls
   39  cd ..
   40  ls
   41  git log 
   42  git diff efcf9..c99d0
   43  ls
   44  git diff HEAD~1
   45  git branch
   46  git branch 
   47  git log 
   48  cd .git/
   49  ls
   50  cat HEAD 
   51  cat refs/heads/master 
   52  cd ..
   53  ls
   54  echo  "Apple Pie" >> Apple.txt
   55  git add . ; git commit -m "Apple-Test2"
   56  git log 
   57  cat .git/refs/heads/master 
   58  cat .git/HEAD 
   59  git diff HEAD~1
   60  git diff HEAD~2
   61  git log
   62  git diff HEAD~4
   63  ls
   64  git logs 
   65  git log
   66  ls
   67  echo "Tasty Apple Pie" >> Apple.txt 
   68  echo "Nice to See you" >> HelloWorld.txt 
   69  git status 
   70  git commit -am "Bug Fix :12345"
   71  git status 
   72  git logs 
   73  git log
   74  git diff HEAD~4
   75  git diff HEAD~3
   76  git diff HEAD~1
   77  ls 
   78  mv Apple.txt Applepie.txt 
   79  git status 
   80  git commit -am "Move Test"
   81  git logs 
   82  git log
   83* 
   84  ls
   85  echo "Test 3" >> HelloWorld.txt 
   86  git add , 
   87  git add . 
   88  git commit 
   89  git config --global core.editor vi 
   90  git config --global --list 
   91  echo "Test 4" >> HelloWorld.txt 
   92  git add . 
   93  git commit 
   94  git log 
   95  history 
   96  git log 
   97  ls 
   98  git config --list 
   99  git remote add origin https://github.com/amitvashisttech/devops-acc-2020March16.git
  100  git config --list 
  101  ls
  102  git status 
  103  git push 
  104  ls
  105  vim HelloWorld.txt 
  106  git commit -am "GitHub Test"
  107  git logs 
  108  git log
  109  git push 
  110  history 
  111  ls
  112  cd ..
  113  ls
  114  cd 
  115  ls
  116  pwd
  117  ls
  118  git clone https://github.com/amitvashisttech/devops-acc-2020March16.git
  119  ls
  120  cd devops-acc-2020March16/
  121  ls
  122  echo "I like Git" >> hello-git.txt
  123  ls
  124  git add . ; git commit -m "hello-git"
  125  ls
  126  git push 
  127  ls
  128  cd /tmp/
  129  ls
  130  cd mydevops-gitrepo/
  131  ls
  132  git pull
  133  ls -ltr 
  134  history 
  135  ls
  136  vi .gitignore
  137  ls
  138  vi creds.txt
  139  git status 
  140  git add . 
  141  git status 
  142  vi .gitignore 
  143  ls
  144  git status 
  145  git rm creds.txt 
  146  git status 
  147  ls 
  148  vi creds.txt 
  149  vi .gitignore 
  150  git status 
  151  git rm creds.txt 
  152  git rm -f creds.txt 
  153  git status 
  154  ls
  155  git add .
  156  git status 
  157  ls -a 
  158  echo "test" > creds.txt
  159  git add .
  160  git status 
  161  vi .gitignore 
  162  ls
  163  git status 
  164  git rm -f creds.txt 
  165  git status 
  166  echo "test" > creds.txt
  167  git add .
  168  git status 
  169  ls
  170  git commit -m "Test-Git Ignore"
  171  git push 
  172  ls
  173  git branch
  174  git branch -r 
  175  git brach uat
  176  git branch uat
  177  git branch test
  178  git branch
  179  git checkout test
  180  git branch
  181* 
  182  git log --oneline
  183  mkdir test
  184  echo "Test-Branch-test-01" >> test/test-1.txt
  185  ls
  186  ls -R test/
  187  cat test/test-1.txt 
  188  git add . ; git commit -m "test-01"
  189  git log --oneline
  190  cat .git/refs/heads/master 
  191  cat .git/refs/heads/test 
  192  cat .git/refs/heads/uat 
  193  git checkout uat
  194  mkdir uat
  195  echo "UAT-Branch-test-01" >> uat/uat-1.txt
  196  git add . 
  197  git commit -m "UAT-Test"
  198  git log --oneline
  199  cat .git/refs/heads/master 
  200  cat .git/refs/heads/uat 
  201  cat .git/refs/heads/test 
  202  git branch -a 
  203  ls
  204  cat .git/refs/heads/master 
  205  cat .git/refs/heads/test 
  206  cat .git/refs/heads/uat 
  207  git log --oneline --graph
  208  ls
  209  git push 
  210  git push --set-upstream origin uat
  211  git branch -a 
  212  git checkout test
  213  git push 
  214  git push --set-upstream origin test
  215  ls
  216  git branch -a 
  217  git checkout master 
  218  ls
  219  git branch -a 
  220  ls 
  221  ls
  222  git merge test
  223  ls
  224  git log 
  225  git log --oneline --graph
  226  git log 
  227  git log --graph
  228  git merge uat
  229  git log --graph
  230  git log --oneline --graph
  231  git push 
  232  history 
  233  ls
  234  git log 
  235  ls
  236  echo "MyWebApp-Relase-2020-v1" > release.txt
  237  git add . ; git commit -m "Release v1"
  238  git log 
  239  git tag
  240  git tag v1
  241  git tag
  242  cat .git/refs/tags/v1 
  243  cat .git/refs/heads/master 
  244  ls
  245  cat .git/refs/tags/v1 
  246  cat .git/refs/heads/master 
  247  ls
  248  echo "test-2" >> test/test-1.txt 
  249  git commit -am "test-2"
  250  cat .git/refs/heads/master 
  251  cat .git/refs/tags/v1 
  252  echo "test-3" >> test/test-1.txt 
  253  git commit -am "test-3"
  254  cat .git/refs/tags/v1 
  255  cat .git/refs/heads/master 
  256  git push 
  257  git push --tags
  258  ls
  259  vi release.txt 
  260  git tag v2
  261  git tags 
  262  git tag
  263  cat .git/refs/tags/v1 
  264  cat .git/refs/tags/v2
  265  echo "test 5" > test/test-1.txt 
  266  git push --tags
  267  cat release.txt 
  268  git tag v2.1
  269  git push --tags
  270  git status 
  271  git commit -am "Tag Test"
  272  git tag v2.2
  273  git push --tags
  274  ls
  275  mkdir Git-Demo
  276  ls
  277  mv * Git-Demo/
  278  ls
  279  cd Git-Demo/
  280  ls
  281  history > Day1-History.txt
